/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package client.model;

import java.net.URI;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class PatchedUser {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("username")
  private String username = null;
  @SerializedName("email")
  private String email = null;
  @SerializedName("groups")
  private List<URI> groups = null;
  @SerializedName("photos")
  private String photos = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   **/
  @ApiModelProperty(value = "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.")
  public String getUsername() {
    return username;
  }
  public void setUsername(String username) {
    this.username = username;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }

  /**
   * The groups this user belongs to. A user will get all permissions granted to each of their groups.
   **/
  @ApiModelProperty(value = "The groups this user belongs to. A user will get all permissions granted to each of their groups.")
  public List<URI> getGroups() {
    return groups;
  }
  public void setGroups(List<URI> groups) {
    this.groups = groups;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPhotos() {
    return photos;
  }
  public void setPhotos(String photos) {
    this.photos = photos;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatchedUser patchedUser = (PatchedUser) o;
    return (this.id == null ? patchedUser.id == null : this.id.equals(patchedUser.id)) &&
        (this.username == null ? patchedUser.username == null : this.username.equals(patchedUser.username)) &&
        (this.email == null ? patchedUser.email == null : this.email.equals(patchedUser.email)) &&
        (this.groups == null ? patchedUser.groups == null : this.groups.equals(patchedUser.groups)) &&
        (this.photos == null ? patchedUser.photos == null : this.photos.equals(patchedUser.photos));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.username == null ? 0: this.username.hashCode());
    result = 31 * result + (this.email == null ? 0: this.email.hashCode());
    result = 31 * result + (this.groups == null ? 0: this.groups.hashCode());
    result = 31 * result + (this.photos == null ? 0: this.photos.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatchedUser {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  username: ").append(username).append("\n");
    sb.append("  email: ").append(email).append("\n");
    sb.append("  groups: ").append(groups).append("\n");
    sb.append("  photos: ").append(photos).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
